+---------------------------------------------------------------------+
|  Log file: pa.results.log                                           |
|  Compiler version: 4.1.1 (bfc362d)                                  |
|  Created on: Sat Oct 27 04:24:54 2018                               |
+---------------------------------------------------------------------+

Program: syntry


PHV Status for stage 0
------------------------------------------------------------------------------
|       PHV Group        | Containers Used |   Bits Used   | Bits Available |
| (container bit widths) |     (% used)    |    (% used)   |                |
------------------------------------------------------------------------------
|         0 (32)         |   16 (100.00%)  |  496 (96.88%) |      512       |
|         1 (32)         |    8 (50.00%)   |  256 (50.00%) |      512       |
|         2 (32)         |    1 (6.25%)    |   32 (6.25%)  |      512       |
|         3 (32)         |    0 (0.00%)    |   0 (0.00%)   |      512       |
|    Total for 32 bit    |   25 (39.06%)   |  784 (38.28%) |      2048      |
|                        |                 |               |                |
|         4 (8)          |   14 (87.50%)   |  104 (81.25%) |      128       |
|         5 (8)          |    6 (37.50%)   |  43 (33.59%)  |      128       |
|         6 (8)          |    0 (0.00%)    |   0 (0.00%)   |      128       |
|         7 (8)          |    0 (0.00%)    |   0 (0.00%)   |      128       |
|    Total for 8 bit     |   20 (31.25%)   |  147 (28.71%) |      512       |
|                        |                 |               |                |
|         8 (16)         |   16 (100.00%)  |  242 (94.53%) |      256       |
|         9 (16)         |    1 (6.25%)    |   16 (6.25%)  |      256       |
|        10 (16)         |    9 (56.25%)   |  144 (56.25%) |      256       |
|        11 (16)         |    0 (0.00%)    |   0 (0.00%)   |      256       |
|        12 (16)         |    0 (0.00%)    |   0 (0.00%)   |      256       |
|        13 (16)         |    0 (0.00%)    |   0 (0.00%)   |      256       |
|    Total for 16 bit    |   26 (27.08%)   |  402 (26.17%) |      1536      |
|                        |                 |               |                |
|       14 (32) T        |    2 (12.50%)   |  64 (12.50%)  |      512       |
|       15 (32) T        |    0 (0.00%)    |   0 (0.00%)   |      512       |
|    Total for 32 bit    |    2 (6.25%)    |   64 (6.25%)  |      1024      |
|                        |                 |               |                |
|        16 (8) T        |    2 (12.50%)   |  16 (12.50%)  |      128       |
|        17 (8) T        |    0 (0.00%)    |   0 (0.00%)   |      128       |
|    Total for 8 bit     |    2 (6.25%)    |   16 (6.25%)  |      256       |
|                        |                 |               |                |
|       18 (16) T        |    7 (43.75%)   |  112 (43.75%) |      256       |
|       19 (16) T        |    0 (0.00%)    |   0 (0.00%)   |      256       |
|       20 (16) T        |    0 (0.00%)    |   0 (0.00%)   |      256       |
|    Total for 16 bit    |    7 (14.58%)   |  112 (14.58%) |      768       |
|                        |                 |               |                |
|       MAU total        |   71 (31.70%)   | 1333 (32.54%) |      4096      |
|     Tagalong total     |    11 (9.82%)   |  192 (9.38%)  |      2048      |
|     Overall total      |   82 (24.40%)   | 1525 (24.82%) |      6144      |
------------------------------------------------------------------------------

--------------------------------------------
PHV Allocation
--------------------------------------------

Allocations in Group 0 32 bits
  32-bit PHV 0 (ingress): phv0[31:0] = meta.time32[31:0] (deparsed)
  32-bit PHV 1 (ingress): phv1[31:0] = tcp.seqNo[31:0] (deparsed)
  32-bit PHV 2 (ingress): phv2[31:0] = tcp.ackNo[31:0] (deparsed)
  32-bit PHV 3 (ingress): phv3[31:16] = ipv4.identification[15:0] (deparsed)
  32-bit PHV 3 (ingress): phv3[15:13] = ipv4.flags[2:0] (deparsed)
  32-bit PHV 3 (ingress): phv3[12:0] = ipv4.fragOffset[12:0] (deparsed)
  32-bit PHV 4 (ingress): phv4[31:0] = meta.tcp_seqNo[31:0]
  32-bit PHV 5 (ingress): phv5[31:0] = meta.tcp_ackNo[31:0]
  32-bit PHV 6 (ingress): phv6[31:24] = ipv4.ttl[7:0] (deparsed)
  32-bit PHV 6 (ingress): phv6[23:16] = ipv4.protocol[7:0] (deparsed)
  32-bit PHV 6 (ingress): phv6[15:0] = ipv4.hdrChecksum[15:0] (tagalong capable) (deparsed)
  32-bit PHV 7 (ingress): phv7[31:0] = ipv4.dstAddr[31:0] (deparsed)
  32-bit PHV 8 (ingress): phv8[31:0] = ethernet.dstAddr[31:0] (deparsed)
  32-bit PHV 9 (ingress): phv9[31:0] = ethernet.srcAddr[31:0] (deparsed)
  32-bit PHV 10 (ingress): phv10[31:0] = meta.ipv4_sa[31:0]
  32-bit PHV 11 (ingress): phv11[31:0] = ig_intr_md_from_parser_aux.ingress_global_tstamp[31:0]
  32-bit PHV 11 (ingress): phv11[31:0] = meta.tcp_h2seq[31:0]
  32-bit PHV 11 (ingress): phv11[31:0] = __md_ingress.__init_0[31:0]
  32-bit PHV 11 (ingress): phv11[31:0] = __md_ingress.__init_2[31:0]
  32-bit PHV 12 (ingress): phv12[31:16] = meta.reverse_tcp_session_map_index[15:0]
  32-bit PHV 13 (ingress): phv13[31:0] = meta.eth_sa[31:0]
  32-bit PHV 14 (ingress): phv14[31:0] = meta.eth_da[31:0]
  32-bit PHV 15 (ingress): phv15[31:0] = meta.thres1[31:0]
  >> 16 in ingress and 0 in egress

Allocations in Group 1 32 bits
  32-bit PHV 16 (egress): phv16[31:0] = meta.time32[31:0] (deparsed)
  32-bit PHV 17 (egress): phv17[31:0] = eg_intr_md_from_parser_aux.egress_global_tstamp[31:0]
  32-bit PHV 18 (egress): phv18[31:29] = ipv4.flags[2:0] (deparsed)
  32-bit PHV 18 (egress): phv18[28:16] = ipv4.fragOffset[12:0] (deparsed)
  32-bit PHV 18 (egress): phv18[15:8] = ipv4.ttl[7:0] (deparsed)
  32-bit PHV 18 (egress): phv18[7:0] = ipv4.protocol[7:0] (deparsed)
  32-bit PHV 19 (egress): phv19[31:0] = ipv4.srcAddr[31:0] (deparsed)
  32-bit PHV 20 (egress): phv20[31:0] = ipv4.dstAddr[31:0] (deparsed)
  32-bit PHV 21 (egress): phv21[31:0] = tcp.seqNo[31:0] (deparsed)
  32-bit PHV 22 (egress): phv22[31:0] = tcp.ackNo[31:0] (deparsed)
  32-bit PHV 23 (egress): phv23[31:28] = tcp.dataOffset[3:0] (deparsed)
  32-bit PHV 23 (egress): phv23[27:24] = tcp.res[3:0] (deparsed)
  32-bit PHV 23 (egress): phv23[23:21] = tcp.flags[2:0] (deparsed)
  32-bit PHV 23 (egress): phv23[20:20] = tcp.ack[0:0] (deparsed)
  32-bit PHV 23 (egress): phv23[19:19] = tcp.psh[0:0] (deparsed)
  32-bit PHV 23 (egress): phv23[18:18] = tcp.rst[0:0] (deparsed)
  32-bit PHV 23 (egress): phv23[17:17] = tcp.syn[0:0] (deparsed)
  32-bit PHV 23 (egress): phv23[16:16] = tcp.fin[0:0] (deparsed)
  32-bit PHV 23 (egress): phv23[15:0] = tcp.window[15:0] (deparsed)
  >> 0 in ingress and 8 in egress

Allocations in Group 2 32 bits
  32-bit PHV 32 (ingress): phv32[31:0] = meta.thres2[31:0]
  >> 1 in ingress and 0 in egress

Allocations in Group 4 8 bits
  8-bit PHV 64 (ingress): phv64[7:4] = tcp.dataOffset[3:0] (deparsed)
  8-bit PHV 64 (ingress): phv64[3:0] = tcp.res[3:0] (deparsed)
  8-bit PHV 65 (ingress): phv65[7:5] = tcp.flags[2:0] (deparsed)
  8-bit PHV 65 (ingress): phv65[4:4] = tcp.ack[0:0] (deparsed)
  8-bit PHV 65 (ingress): phv65[3:3] = tcp.psh[0:0] (deparsed)
  8-bit PHV 65 (ingress): phv65[2:2] = tcp.rst[0:0] (deparsed)
  8-bit PHV 65 (ingress): phv65[1:1] = tcp.syn[0:0] (deparsed)
  8-bit PHV 65 (ingress): phv65[0:0] = tcp.fin[0:0] (deparsed)
  8-bit PHV 66 (ingress): phv66[7:5] = -pad-0-[2:0] (tagalong capable)
  8-bit PHV 66 (ingress): phv66[4:4] = meta.tcp_ack[0:0]
  8-bit PHV 66 (ingress): phv66[3:0] = -pad-1-[3:0] (tagalong capable)
  8-bit PHV 67 (ingress): phv67[7:2] = -pad-2-[5:0] (tagalong capable)
  8-bit PHV 67 (ingress): phv67[1:1] = meta.tcp_syn[0:0]
  8-bit PHV 67 (ingress): phv67[0:0] = -pad-3-[0:0] (tagalong capable)
  8-bit PHV 68 (ingress): phv68[7:0] = ipv4.srcAddr[31:24] (deparsed)
  8-bit PHV 69 (ingress): phv69[7:0] = ipv4.srcAddr[23:16] (deparsed)
  8-bit PHV 70 (ingress): phv70[7:0] = meta.ipv4_da[31:24]
  8-bit PHV 71 (ingress): phv71[7:0] = meta.ipv4_da[23:16]
  8-bit PHV 72 (ingress): phv72[7:0] = ethernet.dstAddr[47:40] (deparsed)
  8-bit PHV 73 (ingress): phv73[7:0] = ethernet.dstAddr[39:32] (deparsed)
  8-bit PHV 74 (ingress): phv74[7:0] = meta.eth_sa[47:40]
  8-bit PHV 75 (ingress): phv75[7:0] = meta.eth_sa[39:32]
  8-bit PHV 76 (ingress): phv76[3:3] = --validity_check--metadata_bridge[0:0] (deparsed)
  8-bit PHV 76 (ingress): phv76[2:2] = --validity_check--tcp[0:0] (deparsed)
  8-bit PHV 76 (ingress): phv76[1:1] = --validity_check--ipv4[0:0] (deparsed)
  8-bit PHV 76 (ingress): phv76[0:0] = --validity_check--ethernet[0:0] (deparsed)
  8-bit PHV 77 (ingress): phv77[7:5] = ig_intr_md_for_tm.drop_ctl[2:0] (deparsed)
  8-bit PHV 77 (ingress): phv77[0:0] = meta.over_thres2[0:0]
  >> 14 in ingress and 0 in egress

Allocations in Group 5 8 bits
  8-bit PHV 80 (egress): phv80[7:4] = ipv4.version[3:0] (deparsed)
  8-bit PHV 80 (egress): phv80[3:0] = ipv4.ihl[3:0] (deparsed)
  8-bit PHV 81 (egress): phv81[7:0] = ipv4.diffserv[7:0] (deparsed)
  8-bit PHV 82 (egress): phv82[7:0] = tcp.srcPort[15:8] (deparsed)
  8-bit PHV 83 (egress): phv83[7:0] = tcp.srcPort[7:0] (deparsed)
  8-bit PHV 84 (egress): phv84[7:3] = eg_intr_md._pad7[4:0]
  8-bit PHV 84 (egress): phv84[2:0] = eg_intr_md.egress_cos[2:0] (deparsed)
  8-bit PHV 85 (egress): phv85[2:2] = --validity_check--tcp[0:0] (deparsed)
  8-bit PHV 85 (egress): phv85[1:1] = --validity_check--ipv4[0:0] (deparsed)
  8-bit PHV 85 (egress): phv85[0:0] = --validity_check--ethernet[0:0] (deparsed)
  >> 0 in ingress and 6 in egress

Allocations in Group 8 16 bits
  16-bit PHV 128 (ingress): phv128[15:0] = meta.countt[15:0] (deparsed)
  16-bit PHV 129 (ingress): phv129[15:0] = tcp.srcPort[15:0] (deparsed)
  16-bit PHV 130 (ingress): phv130[15:0] = tcp.dstPort[15:0] (deparsed)
  16-bit PHV 131 (ingress): phv131[15:0] = meta.tcp_dp[15:0]
  16-bit PHV 132 (ingress): phv132[15:0] = meta.tcp_sp[15:0]
  16-bit PHV 133 (ingress): phv133[15:0] = tcp.window[15:0] (deparsed)
  16-bit PHV 134 (ingress): phv134[15:0] = tcp.checksum[15:0] (deparsed)
  16-bit PHV 135 (ingress): phv135[15:0] = tcp.urgentPtr[15:0] (deparsed)
  16-bit PHV 136 (ingress): phv136[8:0] = ig_intr_md_for_tm.ucast_egress_port[8:0] (deparsed)
  16-bit PHV 137 (ingress): phv137[15:15] = ig_intr_md.resubmit_flag[0:0]
  16-bit PHV 137 (ingress): phv137[14:14] = ig_intr_md._pad1[0:0]
  16-bit PHV 137 (ingress): phv137[13:12] = ig_intr_md._pad2[1:0]
  16-bit PHV 137 (ingress): phv137[11:9] = ig_intr_md._pad3[2:0]
  16-bit PHV 137 (ingress): phv137[8:0] = ig_intr_md.ingress_port[8:0]
  16-bit PHV 138 (ingress): phv138[15:12] = ipv4.version[3:0] (deparsed)
  16-bit PHV 138 (ingress): phv138[11:8] = ipv4.ihl[3:0] (deparsed)
  16-bit PHV 138 (ingress): phv138[7:0] = ipv4.diffserv[7:0] (deparsed)
  16-bit PHV 139 (ingress): phv139[15:0] = ipv4.totalLen[15:0] (deparsed)
  16-bit PHV 140 (ingress): phv140[15:0] = ipv4.srcAddr[15:0] (deparsed)
  16-bit PHV 141 (ingress): phv141[8:8] = meta.drop[0:0]
  16-bit PHV 141 (ingress): phv141[7:0] = meta.in_port[7:0]
  16-bit PHV 142 (ingress): phv142[15:0] = meta.tcp_session_map_index[15:0]
  16-bit PHV 143 (ingress): phv143[15:0] = meta.ipv4_da[15:0]
  >> 16 in ingress and 0 in egress

Allocations in Group 9 16 bits
  16-bit PHV 144 (egress): phv144[15:0] = meta.countt[15:0] (deparsed)
  >> 0 in ingress and 1 in egress

Allocations in Group 10 16 bits
  16-bit PHV 160 (ingress): phv160[15:0] = ethernet.srcAddr[47:32] (deparsed)
  16-bit PHV 161 (ingress): phv161[15:0] = meta.eth_da[47:32]
  16-bit PHV 162 (ingress): phv162[15:0] = ig_intr_md_from_parser_aux.ingress_global_tstamp[47:32]
  16-bit PHV 162 (ingress): phv162[15:15] = meta.over_thres1[0:0]
  16-bit PHV 162 (ingress): phv162[15:15] = __md_ingress.__init_1[0:0]
  16-bit PHV 162 (ingress): phv162[15:15] = __md_ingress.__init_3[0:0]
  16-bit PHV 168 (egress): phv168[15:0] = eg_intr_md_from_parser_aux.egress_global_tstamp[47:32]
  16-bit PHV 169 (egress): phv169[15:0] = ipv4.totalLen[15:0] (deparsed)
  16-bit PHV 170 (egress): phv170[15:0] = ipv4.identification[15:0] (deparsed)
  16-bit PHV 171 (egress): phv171[15:0] = tcp.dstPort[15:0] (deparsed)
  16-bit PHV 172 (egress): phv172[15:0] = tcp.urgentPtr[15:0] (deparsed)
  16-bit PHV 173 (egress): phv173[15:9] = eg_intr_md._pad0[6:0]
  16-bit PHV 173 (egress): phv173[8:0] = eg_intr_md.egress_port[8:0] (deparsed)
  >> 3 in ingress and 6 in egress

Allocations in Group 14 32 bits (tagalong)
  32-bit PHV 260 (egress): phv260[31:0] = ethernet.dstAddr[39:8] (tagalong capable) (deparsed)
  32-bit PHV 261 (egress): phv261[31:0] = ethernet.srcAddr[31:0] (tagalong capable) (deparsed)
  >> 0 in ingress and 2 in egress

Allocations in Group 16 8 bits (tagalong)
  8-bit PHV 292 (egress): phv292[7:0] = ethernet.dstAddr[47:40] (tagalong capable) (deparsed)
  8-bit PHV 293 (egress): phv293[7:0] = ethernet.srcAddr[39:32] (tagalong capable) (deparsed)
  >> 0 in ingress and 2 in egress

Allocations in Group 18 16 bits (tagalong)
  16-bit PHV 320 (ingress): phv320[15:0] = --reserved--_0[15:0] (tagalong capable) (deparsed)
  16-bit PHV 321 (ingress): phv321[15:0] = ethernet.etherType[15:0] (tagalong capable) (deparsed)
  16-bit PHV 326 (egress): phv326[15:0] = --reserved--_1[15:0] (tagalong capable) (deparsed)
  16-bit PHV 327 (egress): phv327[15:0] = ipv4.hdrChecksum[15:0] (tagalong capable) (deparsed)
  16-bit PHV 328 (egress): phv328[15:0] = tcp.checksum[15:0] (tagalong capable) (deparsed)
  16-bit PHV 329 (egress): phv329[15:8] = ethernet.dstAddr[7:0] (tagalong capable) (deparsed)
  16-bit PHV 329 (egress): phv329[7:0] = ethernet.srcAddr[47:40] (tagalong capable) (deparsed)
  16-bit PHV 330 (egress): phv330[15:0] = ethernet.etherType[15:0] (tagalong capable) (deparsed)
  >> 2 in ingress and 5 in egress


Final POV layout (ingress):
  0: --validity_check--ethernet (ingress) in container 76
  1: --validity_check--ipv4 (ingress) in container 76
  2: --validity_check--tcp (ingress) in container 76
  3: --validity_check--metadata_bridge (ingress) in container 76

Final POV layout (egress):
  0: --validity_check--ethernet (egress) in container 85
  1: --validity_check--ipv4 (egress) in container 85
  2: --validity_check--tcp (egress) in container 85

--------------------------------------------
   Bridged metadata layout (9 bytes)
--------------------------------------------
Final ingress layout:
  meta.countt[15:0]
  meta.time32[31:0]

Final egress layout:
  meta.countt[15:0]
  meta.time32[31:0]

